[{"/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/components/header-and-sidebar.jsx":"1","/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/app.jsx":"2","/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/components/page-title.jsx":"3","/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/components/table.jsx":"4","/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/index.jsx":"5","/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/pages/products.jsx":"6"},{"size":5342,"mtime":1610545281296,"results":"7","hashOfConfig":"8"},{"size":956,"mtime":1610544531186,"results":"9","hashOfConfig":"8"},{"size":471,"mtime":1610541254812,"results":"10","hashOfConfig":"8"},{"size":3967,"mtime":1610542832444,"results":"11","hashOfConfig":"8"},{"size":196,"mtime":1610540044586,"results":"12","hashOfConfig":"8"},{"size":248,"mtime":1610543671536,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"e7ocpo",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/components/header-and-sidebar.jsx",["31","32"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport Box from '@material-ui/core/Box';\n\nimport PageTitle from './page-title';\nimport Table from './table';\nimport { Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function HeaderAndSidebar(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const [title, setTitle] = React.useState(<PageTitle titleText=\"Продукция\" />);\n  const [table, setTable] = React.useState(<Table />);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Система складского учёта\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Продукты', 'Склады'].map((text, index) => {\n            return (index % 2 === 0)\n              ? (\n                <Link to=\"/\" style={{ color: 'black', textDecoration: 'none' }}>\n                  <ListItem\n                    button\n                    key={text}\n                  >\n                    <ListItemIcon><AssignmentIcon /></ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                </Link>\n              ) : (\n                <Link to=\"/warehouses\" style={{ color: 'black', textDecoration: 'none' }}>\n                  <ListItem\n                    button\n                    key={text}\n                  >\n                    <ListItemIcon><BusinessIcon /></ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                </Link>\n              )\n          })}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {title}\n        <Box mt={3}>\n          {table}\n        </Box>\n      </main>\n    </div>\n  );\n}\n","/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/app.jsx",["33"],"/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/components/page-title.jsx",[],"/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/components/table.jsx",["34"],"import React, { forwardRef } from 'react';\n\nimport MaterialTable from 'material-table'\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n  };\n\nexport default function Table() {\n  const { useState } = React;\n\n  const [columns, setColumns] = useState([\n    { title: 'Name', field: 'name' },\n    { title: 'Surname', field: 'surname', initialEditValue: 'initial edit value' },\n    { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n    {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n    },\n  ]);\n\n  const [data, setData] = useState([\n    { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n    { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n  ]);\n\n  return (\n    <MaterialTable\n      icons={tableIcons}\n      columns={columns}\n      data={data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              setData([...data, newData]);\n              \n              resolve();\n            }, 1000)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...data];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setData([...dataUpdate]);\n\n              resolve();\n            }, 1000)\n          }),\n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataDelete = [...data];\n              const index = oldData.tableData.id;\n              dataDelete.splice(index, 1);\n              setData([...dataDelete]);\n              \n              resolve()\n            }, 1000)\n          }),\n      }}\n      options={{\n        showTitle: false\n      }}\n    />\n  )\n}\n",["35","36"],"/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/index.jsx",[],"/Users/r.v.mosolov/Desktop/webstorm-projects/projects/small-projects/warehouse-management/src/pages/products.jsx",["37"],"import HeaderAndSidebar from \"../components/header-and-sidebar\";\nimport Table from \"../components/table\";\n\nexport default function Products() {\n  return (\n    <>\n      <HeaderAndSidebar\n        titleText=\"Продукция\"\n      />\n    </>\n  );\n}",["38","39"],{"ruleId":"40","severity":1,"message":"41","line":89,"column":17,"nodeType":"42","messageId":"43","endLine":89,"endColumn":25},{"ruleId":"40","severity":1,"message":"44","line":90,"column":17,"nodeType":"42","messageId":"43","endLine":90,"endColumn":25},{"ruleId":"40","severity":1,"message":"45","line":6,"column":3,"nodeType":"42","messageId":"43","endLine":6,"endColumn":7},{"ruleId":"40","severity":1,"message":"46","line":44,"column":19,"nodeType":"42","messageId":"43","endLine":44,"endColumn":29},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"40","severity":1,"message":"51","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":13},{"ruleId":"47","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},"no-unused-vars","'setTitle' is assigned a value but never used.","Identifier","unusedVar","'setTable' is assigned a value but never used.","'Link' is defined but never used.","'setColumns' is assigned a value but never used.","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"'Table' is defined but never used.",["54"],["55"],"no-global-assign","no-unsafe-negation"]